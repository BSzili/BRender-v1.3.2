name: Workflow

on:
  push:
    branches:
      - 'main'
      - 'ci-*'
    tags:
      - 'v*'
  pull_request:

jobs:

  ci:
    strategy:
      matrix:
        platform:
          - { name: 'Linux',    arch: 'x64',        os: ubuntu-latest, werror: true }
          - { name: 'MacOS',    arch: 'arm64-x64',  os: macos-latest,  werror: true, cmake-args: '-DCMAKE_OSX_ARCHITECTURES="x86_64;arm64"' }
          - { name: 'Windows',  arch: 'Win32',      os: windows-latest }
          - { name: 'Windows',  arch: 'x64',        os: windows-latest }

    defaults:
      run:
        shell: sh
    runs-on: '${{ matrix.platform.os }}'
    name: 'CI ${{ matrix.platform.name }} ${{ matrix.platform.arch }}'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ninja
        uses: aseprite/get-ninja@main
      - uses: ilammy/msvc-dev-cmd@v1.13.0
        if: runner.os == 'Windows'
        with:
          arch: ${{ matrix.platform.arch }}
      # - name: Install Linux dependencies
      #   if: ${{ runner.os == 'Linux' }}
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y libgl-dev
      - name: Set up SDL
        uses: libsdl-org/setup-sdl@main
        with:
          cmake-arguments: ${{ matrix.platform.cmake-args }}
          cmake-generator: Ninja
          version: 2-latest
          add-to-environment: true

      - name: 'Configure (CMake)'
        id: configure
        run: |
          cmake -B build -GNinja \
            -DCMAKE_BUILD_TYPE=RelWithDebInfo \
            ${{ matrix.platform.cmake-args }}
      - name: 'Build (CMake)'
        run: |
          cmake --build build
